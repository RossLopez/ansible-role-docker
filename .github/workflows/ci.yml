---
name: CI
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run tests weekly on Sunday at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install ansible-lint yamllint
          ansible-galaxy collection install community.general
          ansible-galaxy collection install ansible.posix

      - name: Lint with ansible-lint
        run: ansible-lint

      - name: Lint with yamllint
        run: yamllint .

  molecule:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          - ubuntu:22.04
          - ubuntu:20.04
          - debian:12
      fail-fast: false
    name: Molecule (${{ matrix.distro }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install test dependencies
        run: |
          pip install --upgrade pip
          pip install molecule pytest-testinfra ansible-core
          pip install molecule-plugins[docker]
          pip install docker requests urllib3
          ansible-galaxy collection install community.docker --force
          ansible-galaxy collection install community.general --force
          ansible-galaxy collection install ansible.posix --force

      - name: Verify environment
        run: |
          molecule --version
          molecule drivers
          docker --version
          docker system info

      - name: Run Molecule syntax tests
        run: molecule test -s syntax-only
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

      - name: Run full Molecule tests (if syntax passes)
        run: molecule test -s default
        continue-on-error: true
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

  security:
    runs-on: ubuntu-latest
    name: Security Scan
    if: github.event_name == 'push' || github.event_name == 'schedule'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'